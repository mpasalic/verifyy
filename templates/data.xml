<chart palette='3' caption='{{ exp.y_name }} with {{ exp.x_name }}' xAxisName='{{ exp.x_name }}' yAxisName='{{ exp.y_name }}' yUnits='{{ exp.y_units }}' xUnits='{{ exp.x_units }}' showLegend='0' showLabels='1' xAxisMaxValue='{{ xmax }}' xAxisMinValue='{{ xmin }}' >


{% if False %}
<categories verticalLineThickness='1'>
{% for axi in xaxis %}
	<category label='{{ axi }}' x='{{ axi }}' showVerticalLine='1'/>
{% endfor %}
</categories>
{% endif %}

<dataset seriesName='data' color='0372AB' plotBorderThickness='0' showPlotBorder='1' anchorSides='3'>
{% for datapoint in data %}
	<set id="{{ forloop.counter }}" x="{{ datapoint.x }}" y="{{ datapoint.y }}" comment="{{ datapoint.comments }}" tooltext="{{ datapoint.comments }} ({{ datapoint.x }}, {{ datapoint.y }})"/>
{% endfor %}
</dataset>

{% if False %}
<styles>
	<definition>
		<style name="myCaptionFont" type="font" font="Arial" size="14" bold="1" underline="1" /> 
	</definition>
	<application>
		<apply toObject="Caption" styles="myCaptionFont" /> 
	</application>
</styles>
{% endif %}

<extra>

{% if regression %}
	<xmin>{{ xmin }}</xmin>
	<ymin>{{ ymin }}</ymin>
	<xmax>{{ xmax }}</xmax>
	<ymax>{{ ymax }}</ymax>
    
	<regression>
		{{ regression.summary }}
	</regression>
    
    <parametric_curve>
        <t_count>1</t_count>
        <x_func>function(t) { return ({{ xmax }} - {{ xmin }})*t + {{ xmin }}; }</x_func>
        <y_func>function(t) { return {{ regression.intercept }} + {{ regression.slope }} * (({{ xmax }} - {{ xmin }})*t + {{ xmin }}); }</y_func>
    </parametric_curve>
{% endif %}

{% if onefactor %}
    <onefactor>
        <x_mapping>
            {% for x, xOpt in x_mapping.items %}
                <mapping from="{{ x }}" to="{{ xOpt }}" />
            {% endfor %}
        </x_mapping>
        
        <x_intervals>
            {% for bin, bmin, bmls, bmms, bmax in x_intervals %}        
                <candle bin="{{ bin }}" min="{{ bmin }}" max="{{ bmax }}" open="{{ bmls }}" close="{{ bmms }} " />
            {% endfor %}
        </x_intervals>
    </onefactor>
{% endif %}

{% if discrete %}
    <discrete>
        <x_mapping>
            {% for x, xOpt in x_mapping.items %}
                <mapping from="{{ x }}" to="{{ xOpt }}" />
            {% endfor %}
        </x_mapping>

        <y_mapping>
            {% for y, yOpt in y_mapping.items %}
                <mapping from="{{ y }}" to="{{ yOpt }}" />
            {% endfor %}
        </y_mapping>
        
        <tally>
            {% for row, colVec in tally.items %}
                {% for col, val in colVec.items %}
                    {% if col != None %}
                        <cell row="{{ row }}" col="{{ col }}" count="{{ val }}" />
                    {% endif %}
                {% endfor %}
            {% endfor %}
        </tally>

    </discrete>
{% endif %}

</extra>
</chart>
